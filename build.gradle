allprojects {
    group = 'deco2800-2017-potatoes'
    version = '0.1'
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

allprojects {
    ext {
        appName = "deco2800-2017-potatoes"
        gdxVersion = '1.9.6'
        roboVMVersion = '2.3.1'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }
}

subprojects {
    apply plugin: 'java';
    apply plugin: 'eclipse';
    apply plugin: 'idea';
    apply plugin: 'jacoco';

    jacoco {
        toolVersion = "0.7.7.201606060606"
    }

    test {
        jacoco {
            append = false
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        }
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    javadoc {
        options.tags = ['require', 'ensure']
    }

    repositories {
        mavenLocal()
        maven { url 'http://deco2800-artifactory.uqcloud.net/artifactory/libs-release/' }
        mavenCentral()
    }

    dependencies {
        // Logging via Log4J 2.0 using the SLF4J API
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
        compile group: 'org.apache.derby', name: 'derby', version: '10.9.1.0'

        compile(group: 'com.deco2800.4stroke', name: 'core', version: '0.1-SNAPSHOT', changing: true)
        compile(group: 'uq.deco2800.soom', name: 'server', version: '0' +
                '.1-SNAPSHOT', changing: true)

        // Unit testing with JUnit
        testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
        testCompile group: 'junit', name: 'junit', version: '4.12', {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }

        // Mocking with Mockito
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.2'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.2'

        // Headless gdx
        testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testCompile "com.badlogicgames.gdx:gdx:$gdxVersion"
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'resources'
            }
        }

        test {
            java {
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'resources'
            }
        }
    }

    test {
        jvmArgs = [
                "-Djava.awt.headless=true",
                "-Dtestfx.robot=glass",
                "-Dtestfx.headless=true",
                "-Dprism.order=sw",
                "-Dprism.text=t2K",
                "-Dglass.platform=Monocle",
                "-Dmonocle.platform=Headless",
                "-Dprism.verbose=true",
                "-Dprism.debugFonts=true"
        ]
        /* This tells gradle to log tests to the console as they are running. Note that tests
           are only executed if there are changes. To force gradle to run all tests, use
           'gradlew cleanTest test'
         */
        testLogging {
            events "passed", "failed", "skipped", "standardOut", "standardError"
        }
    }
}
